name: Main

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python-version }}'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pipenv
          pipenv sync -d

      # Unit tests
      - name: Run Unit tests
        run: |
          pipenv run test

      - name: Run Formatter
        run: |
          pipenv run lint

  e2e-tests:
    runs-on: ubuntu-latest
    needs: run 

    steps:
    - uses: actions/checkout@v3
    - name: Run action
      uses: ./
      with:
        action: continue
        policy: advanced-security/policy-as-code-testing
        policy-path: policy.yml
        token: "${{ secrets.POLICY_AS_CODE_TESTING_TOKEN }}"
        argvs: --github-repository advanced-security/policy-as-code-testing --github-ref refs/heads/main

  action-test:
    runs-on: ubuntu-latest
    needs: run 

    steps:
    - uses: actions/checkout@v3
    - name: Run action
      uses: ./
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
